#!/usr/bin/env bash

set -e
set -o pipefail
set -u

function finish {
    >&2 echo -en "\033[0m";
}
trap finish EXIT

# Install mason
if [ ! -d .mason ] ; then
  if [ ! -d .git ] ; then curl -L https://github.com/mapbox/mason/archive/master.tar.gz | tar -xf- && mv mason-master .mason
  else git submodule update --init .mason ; fi
fi
export PATH="`pwd`/.mason:${PATH}" MASON_DIR="`pwd`/.mason"

function quote_flags {
    python -c "import sys, re; print filter(None, re.split('(?<!-framework)\s+', ' '.join(sys.argv[1:])))" "$@"
}

LN=$'\n'

CONFIG="# Do not edit. Generated by the configure script.
{
  'target_defaults': {
    'cflags%': [],
    'default_configuration': 'Release',
    'defines': [],
    'include_dirs': [],
    'libraries': []
  },
  'variables': {
"

RAPIDJSON_VERSION=1.0.2
mason install rapidjson ${RAPIDJSON_VERSION}
CONFIG+="    'rapidjson_cflags%': $(quote_flags $(mason cflags rapidjson ${RAPIDJSON_VERSION})),"$LN

VARIANT_VERSION=1.0
mason install variant ${VARIANT_VERSION}
CONFIG+="    'variant_cflags%': $(quote_flags $(mason cflags variant ${VARIANT_VERSION})),"$LN

GTEST_VERSION=1.7.0
mason install gtest ${GTEST_VERSION}
CONFIG+="    'gtest_static_libs%': $(quote_flags $(mason static_libs gtest ${GTEST_VERSION})),"$LN
CONFIG+="    'gtest_cflags%': $(quote_flags $(mason cflags gtest ${GTEST_VERSION})),"$LN
CONFIG+="    'gtest_ldflags%': $(quote_flags $(mason ldflags gtest ${GTEST_VERSION})),"$LN

GLFW_VERSION=3.1
mason install glfw ${GLFW_VERSION}
CONFIG+="    'glfw_static_libs%': $(quote_flags $(mason static_libs glfw ${GLFW_VERSION})),"$LN
CONFIG+="    'glfw_cflags%': $(quote_flags $(mason cflags glfw ${GLFW_VERSION})),"$LN
CONFIG+="    'glfw_ldflags%': $(quote_flags $(mason ldflags glfw ${GLFW_VERSION})),"$LN

CONFIG+="  }
}
"

echo "${CONFIG}" > config.gypi
cat config.gypi
